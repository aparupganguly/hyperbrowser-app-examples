import { Resend } from 'resend';
import { EmailTemplate } from '@/types/company';

const resend = new Resend(process.env.RESEND_API_KEY!);

export async function sendEmail(
  to: string,
  template: EmailTemplate,
  fromEmail: string = 'research@yourdomain.com'
): Promise<boolean> {
  try {
    if (!process.env.RESEND_API_KEY) {
      console.log('RESEND_API_KEY not configured - email sending disabled');
      throw new Error('Email service not configured. Please set RESEND_API_KEY environment variable.');
    }

    await resend.emails.send({
      from: fromEmail,
      to: [to],
      subject: template.subject,
      text: template.body,
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <div style="white-space: pre-wrap; line-height: 1.6;">
            ${template.body.replace(/\n/g, '<br>')}
          </div>
          <hr style="margin: 20px 0; border: none; border-top: 1px solid #eee;">
          <p style="color: #666; font-size: 12px;">
            This email was generated by YC Research Bot
          </p>
        </div>
      `,
    });

    return true;
  } catch (error) {
    console.error('Error sending email:', error);
    return false;
  }
}

export function guessFounderEmail(companyName: string, website?: string): string[] {
  if (!website) return [];
  
  try {
    const domain = new URL(website).hostname.replace('www.', '');
    const companyNameClean = companyName.toLowerCase().replace(/[^a-z]/g, '');
    
    // Common founder email patterns
    const patterns = [
      `founder@${domain}`,
      `hello@${domain}`,
      `contact@${domain}`,
      `info@${domain}`,
      `team@${domain}`,
      `${companyNameClean}@${domain}`,
    ];
    
    return patterns;
  } catch {
    return [];
  }
}

export async function validateEmail(email: string): Promise<boolean> {
  const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  return emailRegex.test(email);
} 